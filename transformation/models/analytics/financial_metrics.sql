-- financial_metrics.sql
-- This model provides comprehensive financial metrics for visualization

CREATE OR REPLACE TABLE financial_metrics AS

WITH daily_transactions AS (
    SELECT
        TRANSACTION_DATE::DATE as DATE,
        TRANSACTION_TYPE,
        SPENDING_CATEGORY,
        SUM(TRANSACTION_AMOUNT) as DAILY_AMOUNT,
        COUNT(*) as TRANSACTION_COUNT,
        MAX(TRANSACTION_AMOUNT) as LARGEST_TRANSACTION,
        MIN(TRANSACTION_AMOUNT) as SMALLEST_TRANSACTION
    FROM SYNTHETIC_TRANSACTIONS
    GROUP BY DATE, TRANSACTION_TYPE, SPENDING_CATEGORY
),

     monthly_metrics AS (
         SELECT
             DATE_TRUNC('MONTH', DATE)::DATE as MONTH,
             TRANSACTION_TYPE,
             SPENDING_CATEGORY,
             SUM(DAILY_AMOUNT) as MONTHLY_AMOUNT,
             SUM(TRANSACTION_COUNT) as TRANSACTION_COUNT,
             AVG(DAILY_AMOUNT) as AVG_DAILY_AMOUNT,
             MAX(LARGEST_TRANSACTION) as LARGEST_TRANSACTION,
             MIN(SMALLEST_TRANSACTION) as SMALLEST_TRANSACTION,
             COUNT(DISTINCT DATE) as ACTIVE_DAYS
         FROM daily_transactions
         GROUP BY MONTH, TRANSACTION_TYPE, SPENDING_CATEGORY
     ),

     account_metrics AS (
         SELECT
             MONTH,
             SUM(CASE WHEN TRANSACTION_TYPE = 'expense' THEN MONTHLY_AMOUNT ELSE 0 END) as TOTAL_EXPENSES,
             SUM(CASE WHEN TRANSACTION_TYPE = 'income' THEN MONTHLY_AMOUNT ELSE 0 END) as TOTAL_INCOME,
             COUNT(DISTINCT CASE WHEN TRANSACTION_TYPE = 'expense' THEN SPENDING_CATEGORY END) as EXPENSE_CATEGORIES,
             COUNT(DISTINCT CASE WHEN TRANSACTION_TYPE = 'income' THEN SPENDING_CATEGORY END) as INCOME_CATEGORIES,
             MAX(CASE WHEN TRANSACTION_TYPE = 'expense' THEN LARGEST_TRANSACTION ELSE 0 END) as LARGEST_EXPENSE,
             MAX(CASE WHEN TRANSACTION_TYPE = 'income' THEN LARGEST_TRANSACTION ELSE 0 END) as LARGEST_INCOME
         FROM monthly_metrics
         GROUP BY MONTH
     )

SELECT
    mm.MONTH,
    mm.TRANSACTION_TYPE,
    mm.SPENDING_CATEGORY,
    mm.MONTHLY_AMOUNT,
    mm.TRANSACTION_COUNT,
    mm.AVG_DAILY_AMOUNT,
    mm.LARGEST_TRANSACTION,
    mm.ACTIVE_DAYS,
    am.TOTAL_EXPENSES,
    am.TOTAL_INCOME,
    (am.TOTAL_INCOME - am.TOTAL_EXPENSES) as MONTHLY_SAVINGS,
    CASE WHEN am.TOTAL_INCOME > 0
             THEN (am.TOTAL_EXPENSES / am.TOTAL_INCOME) * 100
         ELSE NULL
        END as EXPENSE_RATIO,
    am.EXPENSE_CATEGORIES,
    am.INCOME_CATEGORIES
FROM monthly_metrics mm
         JOIN account_metrics am ON mm.MONTH = am.MONTH
ORDER BY mm.MONTH DESC, mm.TRANSACTION_TYPE, mm.MONTHLY_AMOUNT DESC;